{"version":3,"file":"request.js","sources":["util/request.js"],"sourcesContent":["const http = {\n\tbaseUrl: 'http://127.0.0.1:3000', // 前缀\n\trequest(config) {\n\t\tconfig = beforeRequest(config);\n\t\t// 显示加载中状态\n\t\tuni.showLoading({\n\t\t\ttitle: '加载中...',\n\t\t\tmask: true\n\t\t});\n\t\t\n\t\t// 请求地址拼接\n\t\tconfig.url = this.baseUrl + config.url;\n\t\tconst token = uni.getStorageSync('session');\n\t\tif (token) {\n\t\t\tconfig.header = {\n\t\t\t\t...config.header,\n\t\t\t\ttoken: token,\n\t\t\t};\n\t\t}\n\t\t// 异步请求\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuni.request(config).then(res => { // 成功\n\t\t\t\tlet {\t\n\t\t\t\t\tdata\n\t\t\t\t} = res;\n\t\t\t\t// 响应拦截\n\t\t\t\tconst response = beforeResponse(data);\n\n\t\t\t\t// 隐藏加载状态\n\t\t\t\tuni.hideLoading();\n\n\t\t\t\tresolve(response);\n\t\t\t}).catch(err => { // 失败\n\t\t\t\terrorHandle(err)\n\t\t\t\t// 隐藏加载状态\n\t\t\t\tuni.hideLoading();\n\n\t\t\t\treject(err);\n\t\t\t})\n\t\t})\n\n\t},\n\n\t// url：HTTP请求的目标URL。\n\t// data：包含要随请求发送的数据的对象。这可能包括POST请求的参数或服务器所需的其他数据。\n\t// auth：一个布尔值，指示是否需要身份验证（true）。\n\t// method：用于请求的HTTP方法（默认为'GET'）。\n\t// path：一个可选的路径参数。\n\thttp(url, data = {}, auth = false, method = 'GET', path = '') {\n\t\tconst token = uni.getStorageSync('token');\n\t\tif (path) {\n\t\t\turl = url + '/' + path\n\t\t}\n\t\treturn this.request({\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tauth: auth,\n\t\t\ttimeout: 10000,\n\t\t\tmethod: method\n\t\t})\n\t},\n}\n\nconst beforeRequest = (config) => {\n\treturn config\n}\n\nconst beforeResponse = (response) => {\n\t// if (response.code == '-401') {\n\t// \tuni.navigateTo({\n\t// \t\turl: '/pages/Login/login',\n\t// \t});\n\t// \tuni.clearStorageSync();\n\t// }\n\tif (response.code !== 200) {\n\t\tuni.showToast({\n\t\t\ttitle: response.message ?? '',\n\t\t\tduration: 3000,\n\t\t\ticon:'none'\n\t\t});\n\t}\n\treturn response\n}\n\nconst errorHandle = ((err) => {\n\tconsole.log('请求异常', err)\n})\n\nexport default http"],"names":["uni"],"mappings":";;AAAK,MAAC,OAAO;AAAA,EACZ,SAAS;AAAA;AAAA,EACT,QAAQ,QAAQ;AACf,aAAS,cAAc,MAAM;AAE7BA,kBAAAA,MAAI,YAAY;AAAA,MACf,OAAO;AAAA,MACP,MAAM;AAAA,IACT,CAAG;AAGD,WAAO,MAAM,KAAK,UAAU,OAAO;AACnC,UAAM,QAAQA,cAAAA,MAAI,eAAe,SAAS;AAC1C,QAAI,OAAO;AACV,aAAO,SAAS;AAAA,QACf,GAAG,OAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACG;AAED,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvCA,oBAAAA,MAAI,QAAQ,MAAM,EAAE,KAAK,SAAO;AAC/B,YAAI;AAAA,UACH;AAAA,QACA,IAAG;AAEJ,cAAM,WAAW,eAAe,IAAI;AAGpCA,sBAAG,MAAC,YAAW;AAEf,gBAAQ,QAAQ;AAAA,MACpB,CAAI,EAAE,MAAM,SAAO;AACf,oBAAY,GAAG;AAEfA,sBAAG,MAAC,YAAW;AAEf,eAAO,GAAG;AAAA,MACd,CAAI;AAAA,IACJ,CAAG;AAAA,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOD,KAAK,KAAK,OAAO,IAAI,OAAO,OAAO,SAAS,OAAO,OAAO,IAAI;AAC/CA,kBAAG,MAAC,eAAe,OAAO;AACxC,QAAI,MAAM;AACT,YAAM,MAAM,MAAM;AAAA,IAClB;AACD,WAAO,KAAK,QAAQ;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT;AAAA,IACH,CAAG;AAAA,EACD;AACF;AAEA,MAAM,gBAAgB,CAAC,WAAW;AACjC,SAAO;AACR;AAEA,MAAM,iBAAiB,CAAC,aAAa;AAOpC,MAAI,SAAS,SAAS,KAAK;AAC1BA,kBAAAA,MAAI,UAAU;AAAA,MACb,OAAO,SAAS,WAAW;AAAA,MAC3B,UAAU;AAAA,MACV,MAAK;AAAA,IACR,CAAG;AAAA,EACD;AACD,SAAO;AACR;AAEA,MAAM,cAAe,CAAC,QAAQ;AAC7BA,gBAAAA,MAAY,MAAA,OAAA,yBAAA,QAAQ,GAAG;AACxB;;"}